!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ANNOTATION_H	headers/annotation.h	/^#define ANNOTATION_H$/;"	d
Annotation	headers/annotation.h	/^class Annotation : public QGraphicsItem, public QObject$/;"	c
Annotation	src/annotation.cpp	/^Annotation::Annotation(QGraphicsItem *parent, qint64 width, qint64 height, QString content, qint64 beginAt, qint64 duration)$/;"	f	class:Annotation
COMMANDS_H	headers/commands.h	/^#define COMMANDS_H$/;"	d
MAX_PLAYBACK_RATE	headers/videoplayer.h	/^#define MAX_PLAYBACK_RATE /;"	d
SEEK_STEP	headers/videoplayer.h	/^#define SEEK_STEP /;"	d
SUBTITLES_H	headers/subtitles.h	/^#define SUBTITLES_H$/;"	d
VIDEOPLAYER_H	headers/videoplayer.h	/^#define VIDEOPLAYER_H$/;"	d
VOLUME_STEP	headers/videoplayer.h	/^#define VOLUME_STEP /;"	d
addAnnotation	src/videoplayer.cpp	/^void videoplayer::addAnnotation()$/;"	f	class:videoplayer
addSubtitle	src/videoplayer.cpp	/^void videoplayer::addSubtitle(){$/;"	f	class:videoplayer
addSubtitles	headers/videoplayer.h	/^    QAction* addSubtitles = nullptr;$/;"	m	class:videoplayer
addToPlaylist	src/videoplayer.cpp	/^void videoplayer::addToPlaylist(QList<QUrl> urls){$/;"	f	class:videoplayer
addedSubtitle	headers/subtitles.h	/^        bool addedSubtitle = false;$/;"	m	class:subtitles
alreadyModifying	headers/annotation.h	/^    bool alreadyModifying = false;$/;"	m	class:Annotation
appearance_time	src/annotation.cpp	/^qint64 Annotation::appearance_time() const$/;"	f	class:Annotation
backwardClicked	src/videoplayer.cpp	/^void videoplayer::backwardClicked(){$/;"	f	class:videoplayer
boundingRect	src/annotation.cpp	/^QRectF Annotation::boundingRect() const$/;"	f	class:Annotation
calcVideoFactor	src/videoplayer.cpp	/^void videoplayer::calcVideoFactor(QSizeF size){$/;"	f	class:videoplayer
canceled	src/annotation.cpp	/^void Annotation::canceled()$/;"	f	class:Annotation
cmnds	headers/videoplayer.h	/^    commands* cmnds;$/;"	m	class:videoplayer
commands	headers/commands.h	/^class commands : public QWidget{$/;"	c
commands	src/commands.cpp	/^commands::commands(QWidget *parent) :$/;"	f	class:commands
commandsLayout	headers/commands.h	/^    QHBoxLayout* commandsLayout = nullptr;$/;"	m	class:commands
connections	src/videoplayer.cpp	/^void videoplayer::connections(){$/;"	f	class:videoplayer
createCommandLayout	src/commands.cpp	/^void commands::createCommandLayout(){$/;"	f	class:commands
createMenuBar	src/videoplayer.cpp	/^void videoplayer::createMenuBar(){$/;"	f	class:videoplayer
createSliderLayout	src/commands.cpp	/^void commands::createSliderLayout(){$/;"	f	class:commands
currActive	headers/annotation.h	/^    bool currActive = true;$/;"	m	class:Annotation
currTimeOfVideo	headers/annotation.h	/^    qint64 currTimeOfVideo = 0;$/;"	m	class:Annotation
darkGrayColor	headers/videoplayer.h	/^    const QBrush *darkGrayColor = nullptr;$/;"	m	class:videoplayer
dragEnterEvent	src/videoplayer.cpp	/^void videoplayer::dragEnterEvent(QDragEnterEvent *event){$/;"	f	class:videoplayer
dropEvent	src/videoplayer.cpp	/^void videoplayer::dropEvent(QDropEvent *event) {$/;"	f	class:videoplayer
duration	src/annotation.cpp	/^qint64 Annotation::duration() const$/;"	f	class:Annotation
durationChanged	src/videoplayer.cpp	/^void videoplayer::durationChanged(qint64 duration){$/;"	f	class:videoplayer
editor	headers/annotation.h	/^    QPlainTextEdit *editor = nullptr;$/;"	m	class:Annotation
enableAllCommands	src/commands.cpp	/^void commands::enableAllCommands(){$/;"	f	class:commands
exit	src/videoplayer.cpp	/^void videoplayer::exit(){$/;"	f	class:videoplayer
fitView	src/videoplayer.cpp	/^void videoplayer::fitView(){$/;"	f	class:videoplayer
forwardClicked	src/videoplayer.cpp	/^void videoplayer::forwardClicked(){$/;"	f	class:videoplayer
getAlreadyModifying	src/annotation.cpp	/^bool Annotation::getAlreadyModifying() const$/;"	f	class:Annotation
getBeginTime	headers/subtitles.h	/^        QString getBeginTime() const {return m_beginTime;}$/;"	f	class:subtitles
getCurrActive	src/annotation.cpp	/^bool Annotation::getCurrActive() const$/;"	f	class:Annotation
getCurrTimeOfVideo	src/annotation.cpp	/^qint64 Annotation::getCurrTimeOfVideo() const$/;"	f	class:Annotation
getEndTime	headers/subtitles.h	/^        QString getEndTime() const {return m_endTime;}$/;"	f	class:subtitles
getLine	headers/subtitles.h	/^        QString getLine() const {return m_line;};$/;"	f	class:subtitles
getSubtitles	src/subtitles.cpp	/^void subtitles::getSubtitles(QFile &file){$/;"	f	class:subtitles
height	src/annotation.cpp	/^qint64 Annotation::height() const$/;"	f	class:Annotation
hideCommands	src/commands.cpp	/^void commands::hideCommands(){$/;"	f	class:commands
isAddedSubtitle	headers/subtitles.h	/^        bool isAddedSubtitle() {return addedSubtitle;}$/;"	f	class:subtitles
isAvaliable	src/videoplayer.cpp	/^bool videoplayer::isAvaliable() const{$/;"	f	class:videoplayer
isMuted	src/videoplayer.cpp	/^bool videoplayer::isMuted() const{$/;"	f	class:videoplayer
keyPressEvent	src/videoplayer.cpp	/^void videoplayer::keyPressEvent(QKeyEvent *event){$/;"	f	class:videoplayer
loadPlaylist	src/videoplayer.cpp	/^void videoplayer::loadPlaylist(QList<QUrl> urls){$/;"	f	class:videoplayer
m_Slider	headers/commands.h	/^    QSlider* m_Slider = nullptr;$/;"	m	class:commands
m_appearance_time	headers/annotation.h	/^    qint64 m_appearance_time;$/;"	m	class:Annotation
m_backwardButton	headers/commands.h	/^    QAbstractButton* m_backwardButton = nullptr;$/;"	m	class:commands
m_beginTime	headers/subtitles.h	/^        QString m_beginTime;$/;"	m	class:subtitles
m_duration	headers/annotation.h	/^    qint64 m_duration;$/;"	m	class:Annotation
m_duration	headers/videoplayer.h	/^    qint64 m_duration = 0;$/;"	m	class:videoplayer
m_durationInfo	headers/commands.h	/^    QLabel* m_durationInfo = nullptr;$/;"	m	class:commands
m_endTime	headers/subtitles.h	/^        QString m_endTime;$/;"	m	class:subtitles
m_forwardButton	headers/commands.h	/^    QAbstractButton* m_forwardButton = nullptr;$/;"	m	class:commands
m_graphicsView	headers/videoplayer.h	/^    QGraphicsView* m_graphicsView = nullptr;$/;"	m	class:videoplayer
m_height	headers/annotation.h	/^    qint64 m_width,m_height;$/;"	m	class:Annotation
m_line	headers/subtitles.h	/^        QString m_line;$/;"	m	class:subtitles
m_mediaPlayer	headers/videoplayer.h	/^    QMediaPlayer* m_mediaPlayer = nullptr;$/;"	m	class:videoplayer
m_menuBar	headers/videoplayer.h	/^    QMenuBar *m_menuBar = nullptr;$/;"	m	class:videoplayer
m_muteButton	headers/commands.h	/^    QAbstractButton* m_muteButton = nullptr;$/;"	m	class:commands
m_name	headers/annotation.h	/^    QString *m_name = nullptr;$/;"	m	class:Annotation
m_openButton	headers/commands.h	/^    QAbstractButton* m_openButton = nullptr;$/;"	m	class:commands
m_playButton	headers/commands.h	/^    QAbstractButton* m_playButton = nullptr;$/;"	m	class:commands
m_playerMuted	headers/videoplayer.h	/^    bool m_playerMuted = false;$/;"	m	class:videoplayer
m_playerState	headers/videoplayer.h	/^    QMediaPlayer::State m_playerState = QMediaPlayer::StoppedState;$/;"	m	class:videoplayer
m_playlist	headers/videoplayer.h	/^    QMediaPlaylist *m_playlist = nullptr;$/;"	m	class:videoplayer
m_playlist_entries	headers/commands.h	/^    QListWidget* m_playlist_entries = nullptr;$/;"	m	class:commands
m_rect	headers/annotation.h	/^    QRectF *m_rect = nullptr;$/;"	m	class:Annotation
m_rightClickMenu	headers/videoplayer.h	/^    QMenu *m_rightClickMenu = nullptr;$/;"	m	class:videoplayer
m_scene	headers/videoplayer.h	/^    QGraphicsScene* m_scene = nullptr; \/\/Pravljenje scene$/;"	m	class:videoplayer
m_seekBackwardButton	headers/commands.h	/^    QAbstractButton* m_seekBackwardButton = nullptr;$/;"	m	class:commands
m_seekForwardButton	headers/commands.h	/^    QAbstractButton* m_seekForwardButton = nullptr;$/;"	m	class:commands
m_stopButton	headers/commands.h	/^    QAbstractButton* m_stopButton = nullptr;$/;"	m	class:commands
m_text	headers/videoplayer.h	/^    QLabel *m_text = nullptr;$/;"	m	class:videoplayer
m_text_content	headers/annotation.h	/^    QString m_text_content = "";$/;"	m	class:Annotation
m_videoAnnotations	headers/videoplayer.h	/^    QVector<Annotation*> m_videoAnnotations;$/;"	m	class:videoplayer
m_videoItem	headers/videoplayer.h	/^    QGraphicsVideoItem* m_videoItem = nullptr;$/;"	m	class:videoplayer
m_volumeSlider	headers/commands.h	/^    QSlider* m_volumeSlider = nullptr;$/;"	m	class:commands
m_width	headers/annotation.h	/^    qint64 m_width,m_height;$/;"	m	class:Annotation
main	src/main.cpp	/^int main(int argc, char *argv[])$/;"	f
mediaStateChanged	src/videoplayer.cpp	/^void videoplayer::mediaStateChanged(QMediaPlayer::State state){$/;"	f	class:videoplayer
modified	src/annotation.cpp	/^void Annotation::modified()$/;"	f	class:Annotation
modifyDialog	headers/annotation.h	/^    QDialog *modifyDialog = nullptr;$/;"	m	class:Annotation
modifyText	src/annotation.cpp	/^void Annotation::modifyText()$/;"	f	class:Annotation
mouseDoubleClickEvent	src/videoplayer.cpp	/^void videoplayer::mouseDoubleClickEvent(QMouseEvent *event){$/;"	f	class:videoplayer
mouseMoveEvent	src/annotation.cpp	/^void Annotation::mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Annotation
mousePressEvent	src/annotation.cpp	/^void Annotation::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Annotation
mousePressEvent	src/videoplayer.cpp	/^void videoplayer::mousePressEvent(QMouseEvent *event){$/;"	f	class:videoplayer
muteClicked	src/videoplayer.cpp	/^void videoplayer::muteClicked(){$/;"	f	class:videoplayer
name	src/annotation.cpp	/^QString *Annotation::name() const$/;"	f	class:Annotation
numOfAnnotations	headers/videoplayer.h	/^    int numOfAnnotations = 0;$/;"	m	class:videoplayer
onVolumeSliderChanged	src/videoplayer.cpp	/^void videoplayer::onVolumeSliderChanged(){$/;"	f	class:videoplayer
openFile	src/videoplayer.cpp	/^void videoplayer::openFile(){$/;"	f	class:videoplayer
override	headers/annotation.h	/^    QRectF boundingRect() const override;$/;"	m	class:Annotation
override	headers/annotation.h	/^    void mouseMoveEvent(QGraphicsSceneMouseEvent *event)override;$/;"	m	class:Annotation
override	headers/annotation.h	/^    void mousePressEvent(QGraphicsSceneMouseEvent *event) override;$/;"	m	class:Annotation
override	headers/annotation.h	/^    void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget = 0) override;$/;"	m	class:Annotation
override	headers/videoplayer.h	/^    void dragEnterEvent(QDragEnterEvent *event) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void dropEvent(QDropEvent *event) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void keyPressEvent(QKeyEvent *event) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void mouseDoubleClickEvent(QMouseEvent *event) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void mousePressEvent(QMouseEvent *event) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void resizeEvent(QResizeEvent *) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void showEvent(QShowEvent *) override;$/;"	m	class:videoplayer
override	headers/videoplayer.h	/^    void wheelEvent(QWheelEvent *event) override;$/;"	m	class:videoplayer
paint	src/annotation.cpp	/^void Annotation::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Annotation
playClicked	src/videoplayer.cpp	/^void videoplayer::playClicked(){$/;"	f	class:videoplayer
playlistDoubleClickPlay	src/videoplayer.cpp	/^void videoplayer::playlistDoubleClickPlay(){$/;"	f	class:videoplayer
positionChanged	src/videoplayer.cpp	/^void videoplayer::positionChanged(qint64 progress){$/;"	f	class:videoplayer
resizeEvent	src/videoplayer.cpp	/^void videoplayer::resizeEvent(QResizeEvent *){$/;"	f	class:videoplayer
resizeOccured	src/annotation.cpp	/^void Annotation::resizeOccured()$/;"	f	class:Annotation
resize_on	headers/annotation.h	/^    bool resize_on = false;$/;"	m	class:Annotation
screenGeometry	headers/commands.h	/^    QRect screenGeometry;$/;"	m	class:commands
seek	src/videoplayer.cpp	/^void videoplayer::seek(int seconds){$/;"	f	class:videoplayer
seekBackwardClicked	src/videoplayer.cpp	/^void videoplayer::seekBackwardClicked(){$/;"	f	class:videoplayer
seekForwardClicked	src/videoplayer.cpp	/^void videoplayer::seekForwardClicked(){$/;"	f	class:videoplayer
setAddedSubtitle	headers/subtitles.h	/^        void setAddedSubtitle(bool isAdded) {addedSubtitle=isAdded;}$/;"	f	class:subtitles
setAlreadyModifying	src/annotation.cpp	/^void Annotation::setAlreadyModifying(bool value)$/;"	f	class:Annotation
setAppearance_time	src/annotation.cpp	/^void Annotation::setAppearance_time(const qint64 &appearance_time)$/;"	f	class:Annotation
setCurrActive	src/annotation.cpp	/^void Annotation::setCurrActive(bool value)$/;"	f	class:Annotation
setCurrTimeOfVideo	src/annotation.cpp	/^void Annotation::setCurrTimeOfVideo(const qint64 &value)$/;"	f	class:Annotation
setDuration	src/annotation.cpp	/^void Annotation::setDuration(const qint64 &duration)$/;"	f	class:Annotation
setHeight	src/annotation.cpp	/^void Annotation::setHeight(const qint64 &height)$/;"	f	class:Annotation
setMuted	src/videoplayer.cpp	/^void videoplayer::setMuted(bool muted){$/;"	f	class:videoplayer
setName	src/annotation.cpp	/^void Annotation::setName(QString *name)$/;"	f	class:Annotation
setText_content	src/annotation.cpp	/^void Annotation::setText_content(const QString &text_content)$/;"	f	class:Annotation
setVolume	src/videoplayer.cpp	/^void videoplayer::setVolume(qint64 volume){$/;"	f	class:videoplayer
setWidth	src/annotation.cpp	/^void Annotation::setWidth(const qint64 &width)$/;"	f	class:Annotation
showCommands	src/commands.cpp	/^void commands::showCommands(){$/;"	f	class:commands
showEvent	src/videoplayer.cpp	/^void videoplayer::showEvent(QShowEvent *){$/;"	f	class:videoplayer
sliderLayout	headers/commands.h	/^    QHBoxLayout* sliderLayout = nullptr;$/;"	m	class:commands
state	src/videoplayer.cpp	/^QMediaPlayer::State videoplayer::state() const{$/;"	f	class:videoplayer
stopClicked	src/videoplayer.cpp	/^void videoplayer::stopClicked(){$/;"	f	class:videoplayer
subs	headers/subtitles.h	/^        QList<subtitles> subs;$/;"	m	class:subtitles
subtitle	headers/videoplayer.h	/^    subtitles* subtitle;$/;"	m	class:videoplayer
subtitleText	headers/videoplayer.h	/^    QGraphicsTextItem* subtitleText = nullptr;$/;"	m	class:videoplayer
subtitles	headers/subtitles.h	/^        subtitles(){};$/;"	f	class:subtitles
subtitles	headers/subtitles.h	/^class subtitles{$/;"	c
subtitles	src/subtitles.cpp	/^subtitles::subtitles(QString line, QString beginTime, QString endTime):$/;"	f	class:subtitles
text_content	src/annotation.cpp	/^QString Annotation::text_content() const$/;"	f	class:Annotation
updateDurationInfo	src/videoplayer.cpp	/^void videoplayer::updateDurationInfo(qint64 currInfo){$/;"	f	class:videoplayer
videoplayer	headers/videoplayer.h	/^class videoplayer : public QWidget$/;"	c
videoplayer	src/videoplayer.cpp	/^videoplayer::videoplayer(QWidget *parent)$/;"	f	class:videoplayer
volume	src/videoplayer.cpp	/^int videoplayer::volume() const{$/;"	f	class:videoplayer
volumeBeforeMute	headers/videoplayer.h	/^    int volumeBeforeMute = -1;$/;"	m	class:videoplayer
volumeDecrease	src/videoplayer.cpp	/^void videoplayer::volumeDecrease(){$/;"	f	class:videoplayer
volumeIncrease	src/videoplayer.cpp	/^void videoplayer::volumeIncrease(){$/;"	f	class:videoplayer
wheelEvent	src/videoplayer.cpp	/^void videoplayer::wheelEvent(QWheelEvent *event){$/;"	f	class:videoplayer
width	src/annotation.cpp	/^qint64 Annotation::width() const$/;"	f	class:Annotation
~Annotation	src/annotation.cpp	/^Annotation::~Annotation(){$/;"	f	class:Annotation
~subtitles	src/subtitles.cpp	/^subtitles::~subtitles(){}$/;"	f	class:subtitles
~videoplayer	src/videoplayer.cpp	/^videoplayer::~videoplayer(){$/;"	f	class:videoplayer
